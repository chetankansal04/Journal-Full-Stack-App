name: CI Workflow for React and Spring Boot

on:
  push:
    branches:
      - master          # Changes in GitHub workflows
  pull_request:
    branches:
      - master
jobs:
  frontend-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Execution decider
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
              src:
                - 'journal-app-react/**'
                - '.github/**'
                - '.vscode/**'
                - 'README.md'

      - name: Set up Node.js
        if: steps.changes.outputs.src == 'true'
        uses: actions/setup-node@v3
        with:
          node-version: "20" # Specify the required Node.js version

      - name: Install dependencies
        if: steps.changes.outputs.src == 'true'
        working-directory: ./journal-app-react
        run: npm install

      - name: Build React app
        if: steps.changes.outputs.src == 'true'
        working-directory: ./journal-app-react
        run: npm run build

  backend-build:
   runs-on: ubuntu-latest
   steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Execution decider
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
              src:
                - 'journalapp/**'
                - '.github/**'
                - '.vscode/**'
                - 'README.md'

      - name: Set up Java
        if: steps.changes.outputs.src == 'true'
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Make Maven Wrapper executable
        if: steps.changes.outputs.src == 'true'
        working-directory: ./journalapp
        run: chmod +x mvnw

      - name: Build Spring Boot app
        if: steps.changes.outputs.src == 'true'
        working-directory: ./journalapp
        run: ./mvnw clean install

      - name: Log in to Docker Hub
        if: steps.changes.outputs.src == 'true'
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image for backend
        if: steps.changes.outputs.src == 'true'
        working-directory: ./journalapp
        run: docker build -t chetankansal/journalserverapp:latest .

      - name: Push Docker image to Docker Hub
        if: steps.changes.outputs.src == 'true'
        working-directory: ./journalapp
        run: docker push chetankansal/journalserverapp:latest
