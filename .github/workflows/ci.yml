name: CI Workflow for React and Spring Boot

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  frontend-build:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') && (github.event_name == 'push' && !contains(github.event.head_commit.modified, 'journalapp') || github.event_name == 'pull_request' && !contains(github.event.pull_request.changed_files, 'journalapp')) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20" # Specify the required Node.js version

      - name: Install dependencies
        working-directory: ./journal-app-react
        run: npm install

      - name: Build React app
        working-directory: ./journal-app-react
        run: npm run build

  backend-build:
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') && (github.event_name == 'push' && !contains(github.event.head_commit.modified, 'journal-app-react') || github.event_name == 'pull_request' && !contains(github.event.pull_request.changed_files, 'journal-app-react')) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Make Maven Wrapper executable
        working-directory: ./journalapp
        run: chmod +x mvnw

      - name: Build Spring Boot app
        working-directory: ./journalapp
        run: ./mvnw clean install

      - name: Build Docker image for backend
        working-directory: ./journalapp
        run: docker build -t chetankansal/journalserverapp:latest .

      - name: Push Docker image to Docker Hub
        working-directory: ./journalapp
        run: docker push chetankansal/journalserverapp:latest
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
